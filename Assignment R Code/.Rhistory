ward<-na.omit(ward)
#4.4.1 Confirm that data contains all numeric values - Transport Access Scores
as.numeric(ward$"Transport Access Scores")
#4.4.2 Confirm that data contains all numeric values - IMS Scores
as.numeric(ward$"IMS Score")
#5. Calculate the average scores - Transport Access Score
#5.1 A Transport Access Scores
Route1Col_3<-c(as.numeric(ward$"Transport Access Scores"))
mean(Route1Col_3)
#5,2 B  Average Enmployment Access Score ( IMS Score)
Route1Col_4<-c(as.numeric(ward$"IMS Score"))
mean(Route1Col_4)
#6. investigate if there is a correlation between Route 1 a) Transport Access Scores and b) Employment IMD scores
#6.1 create dataset
Xvar<-c(Route1Col_3)
Yvar<-c(Route1Col_4)
data_ward<-data.frame(x=Xvar, y=Yvar)
#6.2 Print initial results
cor(data_ward)
#6.3Rename column names to reflect underlining data
colnames(data_ward) <- c("Transport Access Score", "Employment IMD Score")
#6.4Print result
cor(data_ward)
#7 PLot Points
TransportAccessScore <- c(Route1Col_3)
EmploymentIMD <- c(Route1Col_4)
#Plot the data
plot(TransportAccessScore, EmploymentIMD, col="red")
#8 Conduct & Plot Regression Analysisplot
ggplot(ward,
aes(x = as.numeric(ward$"Transport Access Scores")
, y = as.numeric(ward$"IMS Score")
)) + geom_point(shape=1)+geom_smooth(method=lm)+xlab("2011 Employment Rate for 16 to 64 year olds")+ylab("2014 Av Public Transportation Access Scores")
library(rgdal)
install.packages("rgal")
library(sf)
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/Coursework_Methodology reperformed/CSV/Route2_IMDvsEmployment.csv")
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/Coursework_Methodology reperformed/CSV/Route2_IMDvsEmployment.csv",
col_types = cols(
`Ward No` = col_character(),
`WardName` = col_character(),
`Transport Access Scores` = col_number(),
`IMS Score` = col_number()))
colnames(ward)
unique(ward$"Transport Access Scores")
unique(ward$"IMS Score")
ward<-na.omit(ward)
as.numeric(ward$"Transport Access Scores")
as.numeric(ward$"IMS Score")
Route1Col_3<-c(as.numeric(ward$"Transport Access Scores"))
mean(Route1Col_3)
Route1Col_4<-c(as.numeric(ward$"IMS Score"))
mean(Route1Col_4)
Xvar<-c(Route1Col_3)
Yvar<-c(Route1Col_4)
data_ward<-data.frame(x=Xvar, y=Yvar)
cor(data_ward)
colnames(data_ward) <- c("Transport Access Score", "Employment IMD Score")
cor(data_ward)
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/Coursework_Methodology reperformed/CSV/Route2_IMDvsEmployment.csv")
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/Coursework_Methodology reperformed/CSV/Route2_IMDvsEmployment.csv",
col_types = cols(
`Ward No` = col_character(),
`WardName` = col_character(),
`Transport Access Scores` = col_number(),
`IMS Score` = col_number()))
colnames(ward)
unique(ward$"Transport Access Scores")
unique(ward$"IMS Score")
ward<-na.omit(ward)
as.numeric(ward$"Transport Access Scores")
as.numeric(ward$"IMS Score")
Route1Col_3<-c(as.numeric(ward$"Transport Access Scores"))
mean(Route1Col_3)
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/Coursework_Methodology reperformed/CSV/Route1_IMDvsEmployment.csv")
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/Coursework_Methodology reperformed/CSV/Route1_IMDvsEmployment.csv",
col_types = cols(
`Ward No` = col_character(),
`WardName` = col_character(),
`Transport Access Scores` = col_number(),
`IMS Score` = col_number()))
colnames(ward)
unique(ward$"Transport Access Scores")
unique(ward$"IMS Score")
ward<-na.omit(ward)
as.numeric(ward$"Transport Access Scores")
#4.4.2 Confirm that data contains all numeric values - IMS Scores
as.numeric(ward$"IMS Score")
#5. Calculate the average scores - Transport Access Score
#5.1 A Transport Access Scores
Route1Col_3<-c(as.numeric(ward$"Transport Access Scores"))
Route1Col_3<-c(as.numeric(ward$"Transport Access Scores"))
mean(Route1Col_3)
Route1Col_4<-c(as.numeric(ward$"IMS Score"))
mean(Route1Col_4)
Xvar<-c(Route1Col_3)
Yvar<-c(Route1Col_4)
data_ward<-data.frame(x=Xvar, y=Yvar)
#6.2 Print initial results
cor(data_ward)
#6.3Rename column names to reflect underlining data
colnames(data_ward) <- c("Transport Access Score", "Employment IMD Score")
#6.4Print result
cor(data_ward)
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/course work_1/R Code /LondonData2.csv")
colnames(ward)
unique(ward$"Employment rate (16 64) (2011)")
unique(ward$"Average Public Transport Accessibility score (2014)")
ward<-na.omit(ward)
as.numeric(ward$"Employment rate (16 64) (2011)")
as.numeric(ward$"Average Public Transport Accessibility score (2014)")
mean(ward_col_27)
ward_col_65<-c(as.numeric(ward$"Average Public Transport Accessibility score (2014)"))
mean(ward_col_65)
Xvar<-c(ward_col_27)
Yvar<-c(ward_col_65)
data_ward<-data.frame(x=Xvar, y=Yvar)
#6.2 Print initial results
cor(data_ward)
colnames(data_ward) <- c("(2011) Employment Rate 16 to 64", "(2014) Average Transport Accessibility Scores")
EmploymentRate <- c(ward_col_27)
AvTransportAccessScores <- c(ward_col_65)
#Plot the data
plot(EmploymentRate, AvTransportAccessScores, col="red")
library(tidyverse)
library(tmap)
library(geojsonio)
library(plotly)
library(rgdal)
library(broom)
library(mapview)
library(crosstalk)
library(sf)
library(sp)
library(spdep)
library(car)
getwd()
download.file("https://data.london.gov.uk/download/statistical-gis-boundary-files-london/9ba8c833-6370-4b11-abdc-314aa020d5e0/statistical-gis-boundaries-london.zip", destfile="prac9_data/statistical-gis-boundaries-london.zip")
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/course work_1/R Code /LondonData2.csv")
LondonWardsss <- readOGR("prac9_data/statistical-gis-boundaries-london/ESRI/London_Ward_CityMerged.shp", layer="London_Ward_CityMerged")
LondonWardsssSF <- st_as_sf(LondonWardsss)
library(tidyverse)
library(tmap)
library(geojsonio)
library(plotly)
library(rgdal)
library(broom)
library(mapview)
library(crosstalk)
library(sf)
library(sp)
library(spdep)
library(car)
getwd()
getwd()
download.file("https://data.london.gov.uk/download/statistical-gis-boundary-files-london/9ba8c833-6370-4b11-abdc-314aa020d5e0/statistical-gis-boundaries-london.zip", destfile="prac9_data/statistical-gis-boundaries-london.zip")
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/course work_1/R Code /LondonData2.csv")
LondonWardsss <- readOGR("prac9_data/statistical-gis-boundaries-london/ESRI/London_Ward_CityMerged.shp", layer="London_Ward_CityMerged")
LondonWardsss <- readOGR("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/Practicals/19_12_4 Pr9 Spatial Regression/Practical_9/statistical-gis-boundaries-london/ESRI/London_Ward_CityMerged.shp")
LondonWardsssSF <- st_as_sf(LondonWardsss)
LondonWardsssSF
BNG = "+init=epsg:27700"
LondonWardsssSFBNG <- st_transform(LondonWardsssSF, BNG)
qtm(LondonWardsssSFBNG)
colnames(LondonWardsssSFBNG)
LondonWardProfiles <- read_csv("/Users/jasondalrymple/Desktop/CASA2019_Assignment/CSV files/Route2_IMDvsEmployment.csv")
str(LondonWardProfiles)
colnames(LondonWardProfiles)
unique(LondonWardProfiles$"IMS Score")
unique(LondonWardProfiles$"Transport Access Scores")
LondonWardProfiles<-na.omit(LondonWardProfiles)
as.numeric(unique(LondonWardProfiles$"IMS Score"))
as.numeric(unique(LondonWardProfiles$"Transport Access Scores"))
str(LondonWardProfiles)
LonWardProfiles <- left_join(LondonWardsssSFBNG, LondonWardProfiles, by = c("GSS_CODE" = "Ward No"))
tmap_mode("view")
qtm(LonWardProfiles, fill = "Transport Access Scores", borders = NULL)
qtm(LonWardProfiles, fill = "IMS Score", borders = NULL)
q <- qplot(x = `Transport Access Scores`, y = `IMS Score`, data=LonWardProfiles)
q + stat_smooth(method="lm", se=FALSE, size=1) + geom_jitter()
model1 <- lm(`IMS Score` ~ `Transport Access Scores`, data = LonWardProfiles)
summary(model1)
library(tidyverse)
library(tmap)
library(geojsonio)
library(plotly)
library(rgdal)
library(broom)
library(mapview)
library(crosstalk)
library(sf)
library(sp)
library(spdep)
library(car)
#2 confirm working director
getwd()
#3 download statistical boundary data -
download.file("https://data.london.gov.uk/download/statistical-gis-boundary-files-london/9ba8c833-6370-4b11-abdc-314aa020d5e0/statistical-gis-boundaries-london.zip", destfile="prac9_data/statistical-gis-boundaries-london.zip")
#4. load relevant  CVS file containing the London Data set
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/course work_1/R Code /LondonData2.csv")
LondonWardsss <- readOGR("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/Practicals/19_12_4 Pr9 Spatial Regression/Practical_9/statistical-gis-boundaries-london/ESRI/London_Ward_CityMerged.shp")
#5 convert it to a simple features object
LondonWardsssSF <- st_as_sf(LondonWardsss)
#6 check coordinate reference system
LondonWardsssSF
#7 Proj4 string tells me it's in wgs84, so Convert to British National Grid
BNG = "+init=epsg:27700"
LondonWardsssSFBNG <- st_transform(LondonWardsssSF, BNG)
#8 check the data
qtm(LondonWardsssSFBNG)
colnames(LondonWardsssSFBNG)
LondonWardProfiles <- read_csv("/Users/jasondalrymple/Desktop/CASA2019_Assignment/CSV files/Route1_IMDvsEmployment.csv")
str(LondonWardProfiles)
colnames(LondonWardProfiles)
unique(LondonWardProfiles$"IMS Score")
#10.2 "Transport Access Scores"
unique(LondonWardProfiles$"Transport Access Scores")
#10.3 Removing erroneous data/ confirming that there are no missing values
LondonWardProfiles<-na.omit(LondonWardProfiles)
#10.4.1 Confirm that data contains all numeric values - employment rate
as.numeric(unique(LondonWardProfiles$"IMS Score"))
#10.4.2 Confirm that data contains all numeric values - Transport Accessibility score
as.numeric(unique(LondonWardProfiles$"Transport Access Scores"))
#11 check all of the columns have been read in correctly
str(LondonWardProfiles)
#12 merge boundaries and data
LonWardProfiles <- left_join(LondonWardsssSFBNG, LondonWardProfiles, by = c("GSS_CODE" = "Ward No"))
#13 view variables
tmap_mode("view")
## tmap mode set to interactive viewing
#14.1 remember we are looking at average transport access scores
qtm(LonWardProfiles, fill = "Transport Access Scores", borders = NULL)
#14.2 Employment rate
qtm(LonWardProfiles, fill = "IMS Score", borders = NULL)
#15 Question nil hypothesis - there is no connection between unemployment and access to trasport
#15.1 perform regression on employment rate and access to  transport
q <- qplot(x = `Transport Access Scores`, y = `IMS Score`, data=LonWardProfiles)
#16 plot with a regression line - note, I've added some jitter here as the x-scale is rounded
q + stat_smooth(method="lm", se=FALSE, size=1) + geom_jitter()
model1 <- lm(`IMS Score` ~ `Transport Access Scores`, data = LonWardProfiles)
summary(model1)
#November 18 2019
#Author Jason Dalrymple - jhdalrymple€googlemail.com
#This code has been written to test the statistical connection between a) Average Public Transport Accessibility score (2014)` and
# Employment rate (16 64) (2011)` - based on data available from the London DataStore. The resulting regression graph is available at the following website
http://rpubs.com/Jasdal19/551497
# Data files for this code are all available in the following github https://github.com/jasdalucl2018/CASA2019_Assignment/blob/master/RCode4StatisticalAnalysis.R
.. although the code is written for APPLE to call up the files from my local drive. Pathname code will need to be amended for windows machines.
.....The London Data Set is available from the London Data store as well as the following github https://github.com/jasdalucl2018/CASA2019_Assignment/blob/master/LondonData.csv
#This code forms part of the paper written on
"An Examination as to whether the right route has been selected for the proposed Bakerloo Line Extension."
#Source of the code - much of the code is based on code made avaible by Mirco Musolesi  m.musolesi@ucl.ac.uk as part of
UCL's Principles of Spatial Analysis Practicals Module 2018 - 2019 GEOG0014. For further information please contact
====
#1 Load all required libraries
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
#2. Load CVS file containing the London Data set
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/course work_1/R Code /LondonData2.csv")
#3. Select columns to analyse
colnames(ward)
#selected columns will be [27] "Employment rate (16 64) (2011)"  and [65] "Average Public Transport Accessibility score (2014)"
#4 review dataset to determine if selected columns contains erroneous data
#4.1 "Employment rate (16 64) (2011)"
unique(ward$"Employment rate (16 64) (2011)")
#4.2 "Average Public Transport Accessibility score (2014)"
unique(ward$"Average Public Transport Accessibility score (2014)")
#4.3 Removing erroneous data/ confirming that there are no missing values
ward<-na.omit(ward)
#4.4.1 Confirm that data contains all numeric values - employment rate
as.numeric(ward$"Employment rate (16 64) (2011)")
#4.4.2 Confirm that data contains all numeric values - Transport Accessibility score
as.numeric(ward$"Average Public Transport Accessibility score (2014)")
#5. Calculate the average scores - for employment
#5.1 A Employment rate (16 64) (2011)
ward_col_27<-c(as.numeric(ward$"Employment rate (16 64) (2011)"))
mean(ward_col_27)
#5.1 B Average Public Transport Accessibility Score
ward_col_65<-c(as.numeric(ward$"Average Public Transport Accessibility score (2014)"))
mean(ward_col_65)
#6. investigate if there is a correlation between a) Employment rate (16 64) (2011) (col 27) and b)Average Public Transport Accessibility score (2014) - col 65
#6.1 create dataset
Xvar<-c(ward_col_27)
Yvar<-c(ward_col_65)
data_ward<-data.frame(x=Xvar, y=Yvar)
#6.2 Print initial results
cor(data_ward)
#6.3Rename column names to reflect underlining data
colnames(data_ward) <- c("(2011) Employment Rate 16 to 64", "(2014) Average Transport Accessibility Scores")
#6.4Print result
cor(data_ward)
#7 PLot Points
EmploymentRate <- c(ward_col_27)
AvTransportAccessScores <- c(ward_col_65)
#Plot the data
plot(EmploymentRate, AvTransportAccessScores, col="red")
#8 Conduct & Plot Regression Analysisplot
ggplot(ward,
aes(x = as.numeric(ward$"Employment rate (16 64) (2011)")
, y = as.numeric(ward$"Average Public Transport Accessibility score (2014)")
)) +
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
#Source of the code - much of the code is based on code made avaible by Mirco Musolesi  m.musolesi@ucl.ac.uk as part of
UCL's Principles of Spatial Analysis Practicals Module 2018 - 2019 GEOG0014. For further information please contact
====
#1 Load all required libraries
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
#2. Load CVS file containing the London Data set
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/course work_1/R Code /LondonData2.csv")
#3. Select columns to analyse
colnames(ward)
#selected columns will be [27] "Employment rate (16 64) (2011)"  and [65] "Average Public Transport Accessibility score (2014)"
#4 review dataset to determine if selected columns contains erroneous data
#4.1 "Employment rate (16 64) (2011)"
unique(ward$"Employment rate (16 64) (2011)")
#4.2 "Average Public Transport Accessibility score (2014)"
unique(ward$"Average Public Transport Accessibility score (2014)")
#4.3 Removing erroneous data/ confirming that there are no missing values
ward<-na.omit(ward)
#4.4.1 Confirm that data contains all numeric values - employment rate
as.numeric(ward$"Employment rate (16 64) (2011)")
#4.4.2 Confirm that data contains all numeric values - Transport Accessibility score
as.numeric(ward$"Average Public Transport Accessibility score (2014)")
#5. Calculate the average scores - for employment
#5.1 A Employment rate (16 64) (2011)
ward_col_27<-c(as.numeric(ward$"Employment rate (16 64) (2011)"))
mean(ward_col_27)
#5.1 B Average Public Transport Accessibility Score
ward_col_65<-c(as.numeric(ward$"Average Public Transport Accessibility score (2014)"))
mean(ward_col_65)
#6. investigate if there is a correlation between a) Employment rate (16 64) (2011) (col 27) and b)Average Public Transport Accessibility score (2014) - col 65
#6.1 create dataset
Xvar<-c(ward_col_27)
Yvar<-c(ward_col_65)
data_ward<-data.frame(x=Xvar, y=Yvar)
#6.2 Print initial results
cor(data_ward)
#6.3Rename column names to reflect underlining data
colnames(data_ward) <- c("(2011) Employment Rate 16 to 64", "(2014) Average Transport Accessibility Scores")
#6.4Print result
cor(data_ward)
#7 PLot Points
EmploymentRate <- c(ward_col_27)
AvTransportAccessScores <- c(ward_col_65)
#Plot the data
plot(EmploymentRate, AvTransportAccessScores, col="red")
#8 Conduct & Plot Regression Analysisplot
ggplot(ward,
aes(x = as.numeric(ward$"Employment rate (16 64) (2011)")
, y = as.numeric(ward$"Average Public Transport Accessibility score (2014)")
)) + geom_point(shape=1)+geom_smooth(method=lm)+xlab("2011 Employment Rate for 16 to 64 year olds")+ylab("2014 Av Public Transportation Access Scores")
======
#9 Question nil hypothesis - there is no connection between unemployment and access to trasport
#9 perform regression on employment rate and access to  transport
q <- qplot(x = `Average Public Transport Accessibility score (2014)`, y = `IMS Score`, data=ward)
#16 plot with a regression line - note, I've added some jitter here as the x-scale is rounded
#Source of the code - much of the code is based on code made avaible by Mirco Musolesi  m.musolesi@ucl.ac.uk as part of
UCL's Principles of Spatial Analysis Practicals Module 2018 - 2019 GEOG0014. For further information please contact
====
#1 Load all required libraries
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
#2. Load CVS file containing the London Data set
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/course work_1/R Code /LondonData2.csv")
#3. Select columns to analyse
colnames(ward)
#selected columns will be [27] "Employment rate (16 64) (2011)"  and [65] "Average Public Transport Accessibility score (2014)"
#4 review dataset to determine if selected columns contains erroneous data
#4.1 "Employment rate (16 64) (2011)"
unique(ward$"Employment rate (16 64) (2011)")
#4.2 "Average Public Transport Accessibility score (2014)"
unique(ward$"Average Public Transport Accessibility score (2014)")
#4.3 Removing erroneous data/ confirming that there are no missing values
ward<-na.omit(ward)
#4.4.1 Confirm that data contains all numeric values - employment rate
as.numeric(ward$"Employment rate (16 64) (2011)")
#4.4.2 Confirm that data contains all numeric values - Transport Accessibility score
as.numeric(ward$"Average Public Transport Accessibility score (2014)")
#5. Calculate the average scores - for employment
#5.1 A Employment rate (16 64) (2011)
ward_col_27<-c(as.numeric(ward$"Employment rate (16 64) (2011)"))
mean(ward_col_27)
#5.1 B Average Public Transport Accessibility Score
ward_col_65<-c(as.numeric(ward$"Average Public Transport Accessibility score (2014)"))
mean(ward_col_65)
#6. investigate if there is a correlation between a) Employment rate (16 64) (2011) (col 27) and b)Average Public Transport Accessibility score (2014) - col 65
#6.1 create dataset
Xvar<-c(ward_col_27)
Yvar<-c(ward_col_65)
data_ward<-data.frame(x=Xvar, y=Yvar)
#6.2 Print initial results
cor(data_ward)
#6.3Rename column names to reflect underlining data
colnames(data_ward) <- c("(2011) Employment Rate 16 to 64", "(2014) Average Transport Accessibility Scores")
#6.4Print result
cor(data_ward)
#7 PLot Points
EmploymentRate <- c(ward_col_27)
AvTransportAccessScores <- c(ward_col_65)
#Plot the data
plot(EmploymentRate, AvTransportAccessScores, col="red")
#8 Conduct & Plot Regression Analysisplot
ggplot(ward,
aes(x = as.numeric(ward$"Employment rate (16 64) (2011)")
, y = as.numeric(ward$"Average Public Transport Accessibility score (2014)")
)) + geom_point(shape=1)+geom_smooth(method=lm)+xlab("2011 Employment Rate for 16 to 64 year olds")+ylab("2014 Av Public Transportation Access Scores")
======
#9 Question nil hypothesis - there is no connection between unemployment and access to trasport
#9 perform regression on employment rate and access to  transport
q <- qplot(x = `Average Public Transport Accessibility score (2014)`, y = `IMS Score`, data=ward)
#16 plot with a regression line - note, I've added some jitter here as the x-scale is rounded
library(sf)
library(rgdal)
library(tmap)
library(tmaptools)
library(plyr)
library(tidyverse)
library(ggplot2)
ward <- read_csv("/Users/jasondalrymple/Desktop/UCL laptop  LBU 19_9_26/A. Modules/CASA0005 GIS&S/course work_1/R Code /LondonData2.csv")
colnames(ward)
unique(ward$"Employment rate (16 64) (2011)")
unique(ward$"Average Public Transport Accessibility score (2014)")
ward<-na.omit(ward)
as.numeric(ward$"Employment rate (16 64) (2011)")
as.numeric(ward$"Average Public Transport Accessibility score (2014)")
ward_col_27<-c(as.numeric(ward$"Employment rate (16 64) (2011)"))
mean(ward_col_27)
ward_col_65<-c(as.numeric(ward$"Average Public Transport Accessibility score (2014)"))
mean(ward_col_65)
Xvar<-c(ward_col_27)
Yvar<-c(ward_col_65)
data_ward<-data.frame(x=Xvar, y=Yvar)
cor(data_ward)
colnames(data_ward) <- c("(2011) Employment Rate 16 to 64", "(2014) Average Transport Accessibility Scores")
EmploymentRate <- c(ward_col_27)
AvTransportAccessScores <- c(ward_col_65)
#Plot the data
plot(EmploymentRate, AvTransportAccessScores, col="red")
ggplot(ward,
aes(x = as.numeric(ward$"Employment rate (16 64) (2011)")
, y = as.numeric(ward$"Average Public Transport Accessibility score (2014)")
)) + geom_point(shape=1)+geom_smooth(method=lm)+xlab("2011 Employment Rate for 16 to 64 year olds")+ylab("2014 Av Public Transportation Access Scores")
q <- qplot(x = `Average Public Transport Accessibility score (2014)`, y = `IMS Score`, data=ward)
q + stat_smooth(method="lm", se=FALSE, size=1) + geom_jitter()
q <- qplot(x = `Average Public Transport Accessibility score (2014)`, y = `Employment rate (16 64) (2011)`, data=ward)
q + stat_smooth(method="lm", se=FALSE, size=1) + geom_jitter()
q <- qplot(x = `Employment rate (16 64) (2011)`, y = `Average Public Transport Accessibility score (2014)`, data=ward)
q + stat_smooth(method="lm", se=FALSE, size=1) + geom_jitter()
model1 <- lm(`Employment rate (16 64) (2011)` ~ `Average Public Transport Accessibility score (2014)`, data = ward)
summary(model1)
model1_res <- tidy(model1)
summary(model1_res)
model1_res <- tidy(model1)
summary(model1)
model1_res <- tidy(model1)
library(tidy)
install.packages("tidy)
install.packages("tidy")
install.package("tidy")
install.packages("tidy")
library(tidy)
summary(model1)
